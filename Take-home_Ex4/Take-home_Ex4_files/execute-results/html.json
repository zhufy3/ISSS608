{
  "hash": "21398d5db57e678f49a32f717b54cce1",
  "result": {
    "markdown": "---\ntitle: \"Singapore bi-lateral trade | See what happened\"\nauthor: \"Fangyuan ZHU\"\ndate: 20 Feb 2023\ndate-modified: \"2023-02-24\"\nexecute: \n  echo: true\n  eval: true\n  warning: false\nformat: html\neditor: visual\n---\n\n\n## Our Task\n\nIn this take-home exercise, we are required to uncover the impact of COVID-19 as well as the global economic and political dynamic in **2022** on Singapore bi-lateral trade by using appropriate analytical visualisation techniques learned in **Lesson 6: It's About Time**. We are encouraged to apply appropriate interactive techniques to enhance user and data discovery experiences.\n\n## Data Used\n\nMerchandise Trade provided by Department of Statistics, Singapore (DOS) will be used. The study period will be between **January 2020 to December 2022**.\n\n## Designing Tools\n\nIn this Exercise, we will mainly use R packages like *tidyverse* and *tidyr* and their extensions.\n\n## Importing Packages\n\n-   tidyverse\n\n-   tidyr: provides read_excel() function\n\n-   readxl: provides read_xsls() function\n\n-   knitr: helps to make a tidy table\n\n-   DT: interactive data table. datatable() function\n\n-   patchwork: arange the layout of plots\n\n-   lubridate: ymd_hms\n\n-   data.table: data.table() function\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, tidyr, readxl, knitr, DT, patchwork, lubridate, data.table, dplyr)\n```\n:::\n\n\n## Importing Data {.tabset .tabset-fade .tabset-pills}\n\nOur raw dataset is in a report form so that when we import the dataset, we need to set some augments to properly choose our data. Given that our dataset is *xlsx* format, and the first sheet named \"content\" is a note of the dataset, the second sheet named \"T1\" is import data, the third sheet named \"T2\" is export data, we need to set the **sheet name** and the **range** of the sheet to extract, excluding useless rows and columns.\n\nLet us import the *import* data by calling the sheet named \"T1\" and range from A10 to UT129. Let us take a look at the data we just imported using `datatable()` from `DT` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp<-read_xlsx(\"data/outputFile.xlsx\", sheet = \"T1\", range = \"A10:UT129\")\n\nexp<-read_xlsx(\"data/outputFile.xlsx\", sheet = \"T2\", range = \"A10:DT101\")\n```\n:::\n\n\n## Data cleaning\n\nNow since we need to extract data in 2022, let us select columns from **column 3** to **column 14.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp<-imp%>%\n  select(c(1,3:14))\n\nexp<-exp%>%\n  select(c(1,3:14))\n```\n:::\n\n\nThen let us convert rows into columns and columns into rows, so that we have the states/region as variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp<-imp%>%\n  gather(Month, value, -`Data Series`)%>%\n  spread(`Data Series`, value)\nwrite_excel_csv(imp, \"data/import.csv\")\n\n\nexp<-exp%>%\n  gather(Month, value, -`Data Series`)%>%\n  spread(`Data Series`, value)\nwrite_excel_csv(exp, \"data/export.csv\")\n```\n:::\n\n\n## Missing value check\n\nThen let us see is there any missing value in this data set. Codes below will show us the amount of missing values in each column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp<-read_csv(\"data/import.csv\")\n\nprint(paste0(\"Count of rows containing missing values in import data table is: \",sum(imp[rowSums(is.na(imp))!=0,])))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Count of rows containing missing values in import data table is: 0\"\n```\n:::\n\n```{.r .cell-code}\nexp<-read_csv(\"data/export.csv\")\nprint(paste0(\"Count of rows containing missing values in export data table is: \", sum(exp[rowSums(is.na(exp))!=0,])))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Count of rows containing missing values in export data table is: 0\"\n```\n:::\n:::\n\n\nFrom the printed information, we see that the missing values in both data tables are 0.\n\n## Data recoding\n\n### Converting data type\n\nOur column of time is formatted with YYYY Month. Now we need to remove the year and convert the month into time type as shown below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp$Month<-str_extract(imp$Month, \"\\\\d+ (\\\\w+)\", group = 1)\n\nexp$Month<-str_extract(exp$Month, \"\\\\d+ (\\\\w+)\", group = 1)\n\nimp<-imp%>%\n  mutate(Month = recode(Month, \"Apr\" = \"April\", \"Jan\" = \"January\", \"Feb\" = \"February\", \"Mar\" = \"March\", \"Jun\" = \"June\", \"Jul\" = \"July\", \"Aug\" = \"August\", \"Sep\" = \"September\", \"Oct\" = \"October\", \"Nov\" = \"November\", \"Dec\" = \"December\"))\n\nexp<-exp%>%\n  mutate(Month = recode(Month, \"Apr\" = \"April\", \"Jan\" = \"January\", \"Feb\" = \"February\", \"Mar\" = \"March\", \"Jun\" = \"June\", \"Jul\" = \"July\", \"Aug\" = \"August\", \"Sep\" = \"September\", \"Oct\" = \"October\", \"Nov\" = \"November\", \"Dec\" = \"December\"))\n```\n:::\n\n\nThen we sort the rows with the ascending order of month for both data tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimp<-imp%>%\n  mutate(Month = factor(Month, levels = month.name))%>%\n  arrange(imp$Month, decreasing = FALSE)\n\nexp<-exp%>%\n  mutate(Month = factor(Month, levels = month.name))%>%\n  arrange(exp$Month, decreasing = FALSE)\n```\n:::\n\n\n### Unifying unit\n\n::: panel-tabset\nWe see that the unit of the columns are not aligned, so we can unify the unit of *million* and *thousand.* Let us see which columns are in which unit with codes below.\n\n#### Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(colnames(imp))\n```\n\n::: {.cell-output-display}\n|x                                                     |\n|:-----------------------------------------------------|\n|Month                                                 |\n|Afghanistan (Thousand Dollars)                        |\n|Africa (Million Dollars)                              |\n|America (Million Dollars)                             |\n|Anguilla (Thousand Dollars)                           |\n|Argentina (Thousand Dollars)                          |\n|Asia (Million Dollars)                                |\n|Australia (Thousand Dollars)                          |\n|Austria (Thousand Dollars)                            |\n|Bahamas (Thousand Dollars)                            |\n|Bahrain (Thousand Dollars)                            |\n|Bangladesh (Thousand Dollars)                         |\n|Belgium (Thousand Dollars)                            |\n|Bermuda (Thousand Dollars)                            |\n|Brazil (Thousand Dollars)                             |\n|Brunei Darussalam (Thousand Dollars)                  |\n|Cambodia (Thousand Dollars)                           |\n|Canada (Thousand Dollars)                             |\n|Chile (Thousand Dollars)                              |\n|Cocos (Keeling) Islands (Thousand Dollars)            |\n|Colombia (Thousand Dollars)                           |\n|Commonwealth Of Independent States (Thousand Dollars) |\n|Cook Islands (Thousand Dollars)                       |\n|Cyprus (Thousand Dollars)                             |\n|Czech Republic (Thousand Dollars)                     |\n|Denmark (Thousand Dollars)                            |\n|Ecuador (Thousand Dollars)                            |\n|Estonia (Thousand Dollars)                            |\n|Europe (Million Dollars)                              |\n|European Union (Million Dollars)                      |\n|Fiji (Thousand Dollars)                               |\n|Finland (Thousand Dollars)                            |\n|France (Thousand Dollars)                             |\n|French Guiana (Thousand Dollars)                      |\n|French Polynesia (Thousand Dollars)                   |\n|French Southern Territories (Thousand Dollars)        |\n|Germany, Democratic Republic Of (Thousand Dollars)    |\n|Germany, Federal Republic Of (Thousand Dollars)       |\n|Greece (Thousand Dollars)                             |\n|Grenada (Thousand Dollars)                            |\n|Guam (Thousand Dollars)                               |\n|Guatemala (Thousand Dollars)                          |\n|Honduras (Thousand Dollars)                           |\n|Hong Kong (Thousand Dollars)                          |\n|Hungary (Thousand Dollars)                            |\n|India (Thousand Dollars)                              |\n|Indonesia (Thousand Dollars)                          |\n|Iran (Islamic Republic Of) (Thousand Dollars)         |\n|Ireland (Thousand Dollars)                            |\n|Israel (Thousand Dollars)                             |\n|Italy (Thousand Dollars)                              |\n|Jamaica (Thousand Dollars)                            |\n|Japan (Thousand Dollars)                              |\n|Jordan (Thousand Dollars)                             |\n|Kiribati (Thousand Dollars)                           |\n|Kuwait (Thousand Dollars)                             |\n|Laos People's Democratic Republic (Thousand Dollars)  |\n|Latvia (Thousand Dollars)                             |\n|Lebanon (Thousand Dollars)                            |\n|Liechtenstein (Thousand Dollars)                      |\n|Lithuania (Thousand Dollars)                          |\n|Luxembourg (Thousand Dollars)                         |\n|Macau (Thousand Dollars)                              |\n|Mainland China (Thousand Dollars)                     |\n|Malaysia (Thousand Dollars)                           |\n|Maldives, Republic Of (Thousand Dollars)              |\n|Malta (Thousand Dollars)                              |\n|Mexico (Thousand Dollars)                             |\n|Micronesia (Thousand Dollars)                         |\n|Myanmar (Thousand Dollars)                            |\n|Nauru (Thousand Dollars)                              |\n|Nepal (Thousand Dollars)                              |\n|Netherlands (Thousand Dollars)                        |\n|Netherlands Antilles (Thousand Dollars)               |\n|New Caledonia (Thousand Dollars)                      |\n|New Zealand (Thousand Dollars)                        |\n|Niue (Thousand Dollars)                               |\n|Norfolk Island (Thousand Dollars)                     |\n|Norway (Thousand Dollars)                             |\n|Oceania (Million Dollars)                             |\n|Oman (Thousand Dollars)                               |\n|Other Countries In America (Thousand Dollars)         |\n|Other Countries In Oceania (Thousand Dollars)         |\n|Pakistan (Thousand Dollars)                           |\n|Palau (Thousand Dollars)                              |\n|Panama (Thousand Dollars)                             |\n|Papua New Guinea (Thousand Dollars)                   |\n|Paraguay (Thousand Dollars)                           |\n|Peru (Thousand Dollars)                               |\n|Philippines (Thousand Dollars)                        |\n|Poland (Thousand Dollars)                             |\n|Portugal (Thousand Dollars)                           |\n|Puerto Rico (Thousand Dollars)                        |\n|Qatar (Thousand Dollars)                              |\n|Republic Of Korea (Thousand Dollars)                  |\n|Saudi Arabia (Thousand Dollars)                       |\n|Slovak Republic (Slovakia) (Thousand Dollars)         |\n|Slovenia (Thousand Dollars)                           |\n|Solomon Islands (Thousand Dollars)                    |\n|South Sudan (Thousand Dollars)                        |\n|Spain (Thousand Dollars)                              |\n|Sri Lanka (Thousand Dollars)                          |\n|St Vincent & The Grenadines (Thousand Dollars)        |\n|Sweden (Thousand Dollars)                             |\n|Switzerland (Thousand Dollars)                        |\n|Syrian Arab Republic (Thousand Dollars)               |\n|Taiwan (Thousand Dollars)                             |\n|Thailand (Thousand Dollars)                           |\n|Total Merchandise Imports (Thousand Dollars)          |\n|Trinidad & Tobago (Thousand Dollars)                  |\n|Tuvalu (Thousand Dollars)                             |\n|United Arab Emirates (Thousand Dollars)               |\n|United Kingdom (Thousand Dollars)                     |\n|United States (Thousand Dollars)                      |\n|Uruguay (Thousand Dollars)                            |\n|Venezuela (Thousand Dollars)                          |\n|Vietnam, Socialist Republic Of (Thousand Dollars)     |\n|Wallis & Fatuna Islands (Thousand Dollars)            |\n|Yemen (Thousand Dollars)                              |\n|Yemen Democratic (Thousand Dollars)                   |\n:::\n:::\n\n\nWe see that some columns are calculated in *Thousand Dollars,* some are in *Million Dollars.* Since the *Thousand Dollars* takes the majority, we change *Million Dollars* to thousand dollars. Now let check which columns are in million dollars.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(grep(\"Million\", colnames(imp)))\n```\n\n::: {.cell-output-display}\n|  x|\n|--:|\n|  3|\n|  4|\n|  7|\n| 29|\n| 30|\n| 80|\n:::\n:::\n\n\nNow we see column 3, 4, 7, 29, 30 and 80 are in million dollars, so that we can change values in these columns into *Thousand Dollars.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol<-colnames(imp)\nfor (i in c(3,4,7,29,30,80)){\n  imp[,i]<-imp[,i]*1000\n}\n```\n:::\n\n\n#### Export Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(colnames(imp))\n```\n\n::: {.cell-output-display}\n|x                                                     |\n|:-----------------------------------------------------|\n|Month                                                 |\n|Afghanistan (Thousand Dollars)                        |\n|Africa (Million Dollars)                              |\n|America (Million Dollars)                             |\n|Anguilla (Thousand Dollars)                           |\n|Argentina (Thousand Dollars)                          |\n|Asia (Million Dollars)                                |\n|Australia (Thousand Dollars)                          |\n|Austria (Thousand Dollars)                            |\n|Bahamas (Thousand Dollars)                            |\n|Bahrain (Thousand Dollars)                            |\n|Bangladesh (Thousand Dollars)                         |\n|Belgium (Thousand Dollars)                            |\n|Bermuda (Thousand Dollars)                            |\n|Brazil (Thousand Dollars)                             |\n|Brunei Darussalam (Thousand Dollars)                  |\n|Cambodia (Thousand Dollars)                           |\n|Canada (Thousand Dollars)                             |\n|Chile (Thousand Dollars)                              |\n|Cocos (Keeling) Islands (Thousand Dollars)            |\n|Colombia (Thousand Dollars)                           |\n|Commonwealth Of Independent States (Thousand Dollars) |\n|Cook Islands (Thousand Dollars)                       |\n|Cyprus (Thousand Dollars)                             |\n|Czech Republic (Thousand Dollars)                     |\n|Denmark (Thousand Dollars)                            |\n|Ecuador (Thousand Dollars)                            |\n|Estonia (Thousand Dollars)                            |\n|Europe (Million Dollars)                              |\n|European Union (Million Dollars)                      |\n|Fiji (Thousand Dollars)                               |\n|Finland (Thousand Dollars)                            |\n|France (Thousand Dollars)                             |\n|French Guiana (Thousand Dollars)                      |\n|French Polynesia (Thousand Dollars)                   |\n|French Southern Territories (Thousand Dollars)        |\n|Germany, Democratic Republic Of (Thousand Dollars)    |\n|Germany, Federal Republic Of (Thousand Dollars)       |\n|Greece (Thousand Dollars)                             |\n|Grenada (Thousand Dollars)                            |\n|Guam (Thousand Dollars)                               |\n|Guatemala (Thousand Dollars)                          |\n|Honduras (Thousand Dollars)                           |\n|Hong Kong (Thousand Dollars)                          |\n|Hungary (Thousand Dollars)                            |\n|India (Thousand Dollars)                              |\n|Indonesia (Thousand Dollars)                          |\n|Iran (Islamic Republic Of) (Thousand Dollars)         |\n|Ireland (Thousand Dollars)                            |\n|Israel (Thousand Dollars)                             |\n|Italy (Thousand Dollars)                              |\n|Jamaica (Thousand Dollars)                            |\n|Japan (Thousand Dollars)                              |\n|Jordan (Thousand Dollars)                             |\n|Kiribati (Thousand Dollars)                           |\n|Kuwait (Thousand Dollars)                             |\n|Laos People's Democratic Republic (Thousand Dollars)  |\n|Latvia (Thousand Dollars)                             |\n|Lebanon (Thousand Dollars)                            |\n|Liechtenstein (Thousand Dollars)                      |\n|Lithuania (Thousand Dollars)                          |\n|Luxembourg (Thousand Dollars)                         |\n|Macau (Thousand Dollars)                              |\n|Mainland China (Thousand Dollars)                     |\n|Malaysia (Thousand Dollars)                           |\n|Maldives, Republic Of (Thousand Dollars)              |\n|Malta (Thousand Dollars)                              |\n|Mexico (Thousand Dollars)                             |\n|Micronesia (Thousand Dollars)                         |\n|Myanmar (Thousand Dollars)                            |\n|Nauru (Thousand Dollars)                              |\n|Nepal (Thousand Dollars)                              |\n|Netherlands (Thousand Dollars)                        |\n|Netherlands Antilles (Thousand Dollars)               |\n|New Caledonia (Thousand Dollars)                      |\n|New Zealand (Thousand Dollars)                        |\n|Niue (Thousand Dollars)                               |\n|Norfolk Island (Thousand Dollars)                     |\n|Norway (Thousand Dollars)                             |\n|Oceania (Million Dollars)                             |\n|Oman (Thousand Dollars)                               |\n|Other Countries In America (Thousand Dollars)         |\n|Other Countries In Oceania (Thousand Dollars)         |\n|Pakistan (Thousand Dollars)                           |\n|Palau (Thousand Dollars)                              |\n|Panama (Thousand Dollars)                             |\n|Papua New Guinea (Thousand Dollars)                   |\n|Paraguay (Thousand Dollars)                           |\n|Peru (Thousand Dollars)                               |\n|Philippines (Thousand Dollars)                        |\n|Poland (Thousand Dollars)                             |\n|Portugal (Thousand Dollars)                           |\n|Puerto Rico (Thousand Dollars)                        |\n|Qatar (Thousand Dollars)                              |\n|Republic Of Korea (Thousand Dollars)                  |\n|Saudi Arabia (Thousand Dollars)                       |\n|Slovak Republic (Slovakia) (Thousand Dollars)         |\n|Slovenia (Thousand Dollars)                           |\n|Solomon Islands (Thousand Dollars)                    |\n|South Sudan (Thousand Dollars)                        |\n|Spain (Thousand Dollars)                              |\n|Sri Lanka (Thousand Dollars)                          |\n|St Vincent & The Grenadines (Thousand Dollars)        |\n|Sweden (Thousand Dollars)                             |\n|Switzerland (Thousand Dollars)                        |\n|Syrian Arab Republic (Thousand Dollars)               |\n|Taiwan (Thousand Dollars)                             |\n|Thailand (Thousand Dollars)                           |\n|Total Merchandise Imports (Thousand Dollars)          |\n|Trinidad & Tobago (Thousand Dollars)                  |\n|Tuvalu (Thousand Dollars)                             |\n|United Arab Emirates (Thousand Dollars)               |\n|United Kingdom (Thousand Dollars)                     |\n|United States (Thousand Dollars)                      |\n|Uruguay (Thousand Dollars)                            |\n|Venezuela (Thousand Dollars)                          |\n|Vietnam, Socialist Republic Of (Thousand Dollars)     |\n|Wallis & Fatuna Islands (Thousand Dollars)            |\n|Yemen (Thousand Dollars)                              |\n|Yemen Democratic (Thousand Dollars)                   |\n:::\n:::\n\n\nWe see that some columns are calculated in Thousand Dollars, some are in Million Dollars. Since the Thousand Dollars takes the majority, we change Million Dollars to thousand dollars. Now let check which columns are in million dollars.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(grep(\"Million\", colnames(exp)))\n```\n\n::: {.cell-output-display}\n|  x|\n|--:|\n|  3|\n|  4|\n|  6|\n| 23|\n| 24|\n| 60|\n:::\n:::\n\n\nNow we see column 3, 4, 6, 23, 24 and 60 are in million dollars, so that we can change values in these columns into *Thousand Dollars.*\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncol<-colnames(exp)\nfor (i in c(3,4,6,23,24,60)){\n  exp[,i]<-exp[,i]*1000\n}\n```\n:::\n\n:::\n\n### Recode column names\n\nWe see that the column names contain unit dollars, which will be useless because we have unify the unit. Therefore let us extract the column names to only retain the countries' names.\n\n::: panel-tabset\n#### Import data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(imp)[-1]<-str_extract(colnames(imp)[-1],\"(.+)\\\\(.+\\\\)$\",group = 1)\n```\n:::\n\n\n\n\n\n#### Export data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(exp)[-1]<-str_extract(colnames(exp)[-1],\"(.+)\\\\(.+\\\\)$\",group = 1)\n```\n:::\n\n\n\n:::\n\n### Glimpse at data table\n\n::: panel-tabset\n### Import data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(data = imp, class = \"display\", extensions = \"Buttons\", options = list(dom=\"Bfrtip\", buttons = list(list(extend = \"colvis\", text = \"Exclude/Include Columns\"))))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-da3d506fa8102dc29a16\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-da3d506fa8102dc29a16\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"April\",\"August\",\"December\",\"February\",\"January\",\"July\",\"June\",\"March\",\"May\",\"November\",\"October\",\"September\"],[20,107,61,99,20,82,8,10,85,26,9,19],[591900,551200,414900,668500,529900,574400,675900,636900,352900,483600,589900,395000],[7822100,8633800,6901500,5385200,5850900,7879700,8024000,7176100,8521100,7529400,7666400,7995900],[4,9,0,1,2,0,2,1,1,0,1,0],[6341,11801,11273,8302,9694,10327,11559,6657,16397,6775,14908,13163],[38735700,40911900,33611700,31611300,35014000,43214200,42507200,42199900,40534700,34733700,36120900,37696300],[1454940,696980,1253373,744590,682538,924529,1020536,759708,977494,577829,1246296,1447901],[82248,105197,104665,80431,83123,118935,114118,106396,116496,105084,101231,130438],[2,0,11,6,47,6,14704,0,11,4,4,4],[76907,7085,44949,1358,4480,165713,197690,4672,293928,11520,66675,2744],[18850,36996,27270,16678,21085,18815,20745,19840,23744,25709,18536,18308],[146603,132917,103655,247242,170868,224676,114704,319393,116817,121773,88796,215978],[0,2,0,0,0,1,0,1,6,4,0,3],[836482,968690,1004171,458528,794992,928891,1070887,516453,954871,1132945,917460,833293],[446823,311958,143124,161909,118376,248815,247045,178316,307654,121051,214994,208537],[22457,21829,25899,15084,21450,27796,13225,45772,16501,16407,9089,12607],[204489,599499,211232,197815,227718,284927,215581,253586,200837,224872,213606,241035],[9497,75458,16649,36587,8949,20111,11018,17065,15492,13831,11567,29599],[1,7,2,0,3,1,0,14,0,0,2,0],[16128,9806,7915,5529,87646,1927,84394,29549,50735,4436,2200,10518],[250158,170747,559381,602562,851550,268726,262627,80641,7728,355213,211147,192289],[17,0,0,0,0,0,1,0,83,0,0,23],[1889,2499,21698,28179,3387,1199,1848,1189,2307,2385,2034,1662],[72601,76026,69549,60391,63267,82010,84960,80205,111863,77729,78066,73954],[55538,126150,67665,40370,142017,55752,50966,76044,51216,67436,63719,61842],[3323,1931,4475,4001,17491,2226,5653,3042,4066,2745,4893,2522],[52312,7588,5378,20506,6857,8844,6260,5249,7884,6972,5489,7789],[7407200,7433200,7541800,6479000,7821600,8300500,7300200,7203200,7030800,7242800,7475900,8167600],[5375200,5131000,5058800,4064100,4561200,5233500,5135800,5137200,4551300,4961400,4685200,5145800],[379,185,243,215,470,601,320,634,458,191,170,498],[98354,38114,42399,30725,59916,91645,73548,58259,87196,49148,49749,48419],[1553618,1624646,1537347,1074703,1426667,1555500,1535920,1289677,1365379,1563127,1493161,1660563],[36,431,123,930,14,359,195,2,122,517,12899,296],[141,38,210,40,58,493,2730,50,2894,35,60,37],[7,8,46,32,258,4,1,9,83,99,115,242],[0,0,0,0,0,0,0,0,0,0,0,0],[1282312,1135242,1129542,1074201,1038822,1207446,1108916,1259702,1095451,1107630,1122251,1170472],[117955,170197,99085,40633,17780,207744,108596,10073,47795,37937,15850,107888],[2,8,6,18,2,0,13,41,1,19,1,3],[44,86,35,52,69,12160,45,104,9,104,65,176],[1381,2170,570,1895,1603,3463,1168,1931,2804,997,262,926],[443,793,1457,253,274,780,228,320,238,838,706,432],[360880,319470,240017,210038,514054,624415,333510,383912,431788,169227,207166,354257],[37592,39917,44406,27612,37471,48975,44843,38279,36746,46849,42761,38367],[1159602,908131,834657,1038814,851347,1022364,1251445,1023825,885584,837673,826855,1023746],[2401307,2301232,2074781,1752288,1854041,2032018,2244033,2245632,2242187,1971918,1987191,1924895],[191,255,317,316,754,44,258,790,328,267,692,258],[86763,193225,106678,110898,82200,107148,154789,127647,114569,118525,157648,118936],[101182,126174,98717,151344,99841,99014,106901,147553,94229,85965,93452,143055],[534144,592000,702472,452391,567318,570591,606990,549561,555654,725004,594994,547587],[125,137,93,104,44,24,96,44,47,117,61,493],[3273519,3100676,2618288,2496003,2448743,3440363,3194697,3429885,3842940,2837697,3038903,3109529],[4772,3782,8265,2531,6037,5333,8573,4639,8687,7262,3020,8904],[1,0,0,0,0,0,0,1,15,3,0,0],[21012,56351,639,3188,18171,117344,2626,105396,158838,54562,52798,16848],[13936,36150,7281,4162,16693,1707,19064,22579,17428,4963,16907,20214],[4620,3549,4288,2888,3324,3910,3546,3726,4452,6436,2299,2679],[50,337,332,121,121,475,92,188,79,578,449,303],[4006,3380,2250,2804,2951,3229,3055,2640,3438,3686,2650,3558],[53185,6345,13594,8831,52056,3338,135585,53700,12346,8716,5892,8406],[2296,31284,8156,7456,32098,9766,32019,3539,4651,5714,15746,55482],[3293,3219,1376,3225,1829,982,4107,3104,2484,17054,2341,436],[6153885,8196629,7642587,4799291,6387242,8510236,7976196,6635528,7478079,8285837,7377473,7390866],[6958619,7225607,6017970,5333950,6180062,7243882,7528135,7882249,6664440,6773423,6417377,7672003],[41,37,103,96,145,21,4,9,134,145,14,43],[26320,40703,41040,81616,18169,54619,21429,23192,25475,23080,51734,23836],[245392,247995,277739,183348,201662,402686,301939,237988,274105,242881,272680,263872],[9,10,29,19,3,8,22,3,20,8,5,10],[6443,8313,7486,5771,6836,7363,6221,7434,7012,6044,5856,6949],[0,0,14,20,10,0,18,543,262,0,0,8],[1026,559,221,28582,868,632,385,150,279,612,688,602],[574480,339001,384010,213278,261220,359653,265196,423978,279506,301384,263199,314814],[3,0,0,5,0,0,0,5,0,0,0,0],[5,186,18,59,22,25,10,92,102,256,14,262],[92299,133089,122266,55143,115683,97855,102003,84730,155635,72677,72719,79919],[0,0,80,2,0,0,0,2,0,0,1,3],[57,101,1,11,23,0,9,0,70,0,0,0],[55664,36231,50581,46708,54280,49789,53425,90633,44564,43134,40090,41524],[1559100,935900,1399900,814400,810400,1060600,1141800,863900,1164700,664400,1329800,1544600],[63758,73156,72624,26302,44336,71377,129614,28076,32226,60005,108470,42137],[35968,40996,37931,25285,24530,40731,62285,29530,63491,43918,44771,35101],[254,441,1577,1231,555,2880,1032,1570,422,3090,269,664],[9552,9692,7334,16731,6204,4988,6725,8074,6176,10169,6327,5272],[0,6,1,0,0,0,0,137,0,0,0,0],[327,424,127,29,102,131,403,193,337,116,175,328],[10765,104656,23124,13742,10972,21087,15351,16279,27361,12724,10221,14332],[422,513,681,404,172,423,832,557,945,281,487,235],[1267,1888,3464,846,1656,3042,12092,1044,7394,2155,11670,14741],[1126651,1121526,592778,962299,1024236,1358580,1219107,1112063,1165111,581054,646820,599147],[68894,64268,61324,57103,60535,57608,64196,82195,68693,59504,72936,82610],[32570,45507,31026,26909,79995,46337,46698,27227,36291,33086,39971,47500],[16699,14898,8375,14619,7191,16567,9667,8633,12158,16518,5480,9831],[567212,827737,640131,599833,429490,692186,651773,304196,557744,476149,528921,766915],[3557581,3841813,3207322,3042073,3341610,4382579,4120895,4028469,3678194,2863026,3044583,3113799],[767599,1081996,801168,1040074,920723,1003667,946997,1701009,1441814,866619,1010564,954922],[8311,10549,9115,6294,9865,10839,7301,8786,9303,7487,9522,7399],[7804,7957,7106,5385,5564,7600,6371,6130,7274,8502,8759,7816],[0,2,3,3,0,0,5,0,8,13,21,4],[0,0,33107,0,0,12,16751,0,0,27952,0,14777],[274544,200170,262629,160044,161163,178600,317461,295111,189520,245875,184146,209987],[11842,12789,10737,10057,10925,13242,13958,10342,10004,12169,14721,13436],[0,0,0,0,0,0,1,0,0,0,2,21],[163301,107557,162253,175309,149089,181260,168909,257417,170417,196484,180230,143127],[844154,1420434,992687,988959,1374633,1937455,941426,1000366,1433645,949410,1811943,1758858],[0,0,0,0,0,0,32,4,0,0,3,17],[6866989,7174679,5357878,6469836,6978727,7306972,7548824,7467443,6676629,5319407,6484560,5683947],[1529457,1511871,1116398,1231562,1239894,1636787,2034027,2248986,1440319,1241990,1431165,1343781],[56116002,58466009,49869770,44958373,50026788,61029374,59649162,58079982,57604263,50653907,53182943,55799312],[55,80568,64,30,68,3033,73,24,47,2854,31,58],[0,0,0,0,0,0,0,0,0,0,1,0],[2076593,1629843,1212293,1486825,1619973,2225339,1812158,2307579,2110593,1205738,1642118,2315066],[873970,753406,940088,769356,948415,802819,909903,886714,985209,1050419,859994,1131385],[6441534,6575058,5314219,4444812,4451719,6158055,6219803,5939553,6889723,5832049,6163496,6537215],[2387,806,635,3137,15600,5398,1982,130093,27476,779,1123,3311],[140,803,89,17,38,442,251,4,113,720,885,238],[821194,688285,567388,445527,561237,759728,706136,636576,781847,488956,522441,594893],[0,0,0,0,178,0,0,0,1,0,0,0],[341,151,629,454,2,499,245,172,618,106,265,48],[0,0,0,0,0,0,0,0,0,0,0,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Month<\\/th>\\n      <th>Afghanistan <\\/th>\\n      <th>Africa <\\/th>\\n      <th>America <\\/th>\\n      <th>Anguilla <\\/th>\\n      <th>Argentina <\\/th>\\n      <th>Asia <\\/th>\\n      <th>Australia <\\/th>\\n      <th>Austria <\\/th>\\n      <th>Bahamas <\\/th>\\n      <th>Bahrain <\\/th>\\n      <th>Bangladesh <\\/th>\\n      <th>Belgium <\\/th>\\n      <th>Bermuda <\\/th>\\n      <th>Brazil <\\/th>\\n      <th>Brunei Darussalam <\\/th>\\n      <th>Cambodia <\\/th>\\n      <th>Canada <\\/th>\\n      <th>Chile <\\/th>\\n      <th>Cocos (Keeling) Islands <\\/th>\\n      <th>Colombia <\\/th>\\n      <th>Commonwealth Of Independent States <\\/th>\\n      <th>Cook Islands <\\/th>\\n      <th>Cyprus <\\/th>\\n      <th>Czech Republic <\\/th>\\n      <th>Denmark <\\/th>\\n      <th>Ecuador <\\/th>\\n      <th>Estonia <\\/th>\\n      <th>Europe <\\/th>\\n      <th>European Union <\\/th>\\n      <th>Fiji <\\/th>\\n      <th>Finland <\\/th>\\n      <th>France <\\/th>\\n      <th>French Guiana <\\/th>\\n      <th>French Polynesia <\\/th>\\n      <th>French Southern Territories <\\/th>\\n      <th>Germany, Democratic Republic Of <\\/th>\\n      <th>Germany, Federal Republic Of <\\/th>\\n      <th>Greece <\\/th>\\n      <th>Grenada <\\/th>\\n      <th>Guam <\\/th>\\n      <th>Guatemala <\\/th>\\n      <th>Honduras <\\/th>\\n      <th>Hong Kong <\\/th>\\n      <th>Hungary <\\/th>\\n      <th>India <\\/th>\\n      <th>Indonesia <\\/th>\\n      <th>Iran (Islamic Republic Of) <\\/th>\\n      <th>Ireland <\\/th>\\n      <th>Israel <\\/th>\\n      <th>Italy <\\/th>\\n      <th>Jamaica <\\/th>\\n      <th>Japan <\\/th>\\n      <th>Jordan <\\/th>\\n      <th>Kiribati <\\/th>\\n      <th>Kuwait <\\/th>\\n      <th>Laos People's Democratic Republic <\\/th>\\n      <th>Latvia <\\/th>\\n      <th>Lebanon <\\/th>\\n      <th>Liechtenstein <\\/th>\\n      <th>Lithuania <\\/th>\\n      <th>Luxembourg <\\/th>\\n      <th>Macau <\\/th>\\n      <th>Mainland China <\\/th>\\n      <th>Malaysia <\\/th>\\n      <th>Maldives, Republic Of <\\/th>\\n      <th>Malta <\\/th>\\n      <th>Mexico <\\/th>\\n      <th>Micronesia <\\/th>\\n      <th>Myanmar <\\/th>\\n      <th>Nauru <\\/th>\\n      <th>Nepal <\\/th>\\n      <th>Netherlands <\\/th>\\n      <th>Netherlands Antilles <\\/th>\\n      <th>New Caledonia <\\/th>\\n      <th>New Zealand <\\/th>\\n      <th>Niue <\\/th>\\n      <th>Norfolk Island <\\/th>\\n      <th>Norway <\\/th>\\n      <th>Oceania <\\/th>\\n      <th>Oman <\\/th>\\n      <th>Other Countries In America <\\/th>\\n      <th>Other Countries In Oceania <\\/th>\\n      <th>Pakistan <\\/th>\\n      <th>Palau <\\/th>\\n      <th>Panama <\\/th>\\n      <th>Papua New Guinea <\\/th>\\n      <th>Paraguay <\\/th>\\n      <th>Peru <\\/th>\\n      <th>Philippines <\\/th>\\n      <th>Poland <\\/th>\\n      <th>Portugal <\\/th>\\n      <th>Puerto Rico <\\/th>\\n      <th>Qatar <\\/th>\\n      <th>Republic Of Korea <\\/th>\\n      <th>Saudi Arabia <\\/th>\\n      <th>Slovak Republic (Slovakia) <\\/th>\\n      <th>Slovenia <\\/th>\\n      <th>Solomon Islands <\\/th>\\n      <th>South Sudan <\\/th>\\n      <th>Spain <\\/th>\\n      <th>Sri Lanka <\\/th>\\n      <th>St Vincent &amp; The Grenadines <\\/th>\\n      <th>Sweden <\\/th>\\n      <th>Switzerland <\\/th>\\n      <th>Syrian Arab Republic <\\/th>\\n      <th>Taiwan <\\/th>\\n      <th>Thailand <\\/th>\\n      <th>Total Merchandise Imports <\\/th>\\n      <th>Trinidad &amp; Tobago <\\/th>\\n      <th>Tuvalu <\\/th>\\n      <th>United Arab Emirates <\\/th>\\n      <th>United Kingdom <\\/th>\\n      <th>United States <\\/th>\\n      <th>Uruguay <\\/th>\\n      <th>Venezuela <\\/th>\\n      <th>Vietnam, Socialist Republic Of <\\/th>\\n      <th>Wallis &amp; Fatuna Islands <\\/th>\\n      <th>Yemen <\\/th>\\n      <th>Yemen Democratic <\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[{\"extend\":\"colvis\",\"text\":\"Exclude/Include Columns\"}],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Export data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatatable(data = exp, class = \"display\", extensions = \"Buttons\", options = list(dom=\"Bfrtip\", buttons = list(list(extend = \"colvis\", text = \"Exclude/Include Columns\"))))\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-8dfc36e83d9d316b75b9\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8dfc36e83d9d316b75b9\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],[\"April\",\"August\",\"December\",\"February\",\"January\",\"July\",\"June\",\"March\",\"May\",\"November\",\"October\",\"September\"],[72,232,214,411,527,240,138,179,101,272,345,453],[1206600,1608500,1088600,780500,688800,1097600,1214700,948800,914200,1527000,1185600,1201800],[7075600,7931000,6217500,5396800,6576200,6731200,7508600,7933000,6341100,6394200,6653900,7091900],[19646,43246,22119,17621,21644,14329,19515,21158,20947,20687,23605,52858],[42328600,44106200,39734800,37113100,40021000,46129500,46328800,45030900,43779300,37973200,40500800,45605100],[2138137,2060828,1711317,1492564,1650218,2252228,2215085,2063439,1941642,1794035,1628700,1923247],[33756,36414,49367,22749,39656,30552,35724,62120,28787,40047,60000,60601],[21131,48485,24163,19719,29439,10775,59388,35338,10005,21034,121596,41003],[623837,534857,294037,674445,406728,555989,857101,774546,577713,339772,465380,547112],[668060,570824,432376,1007201,702940,991586,588520,1446036,617646,756814,350565,386724],[226969,258914,227374,224065,241165,215066,262228,247555,223271,170736,202358,274320],[140971,101311,75900,95335,77716,107918,142268,91187,75842,65457,67063,81269],[629986,1087906,195030,630559,1295867,1698433,1042776,339098,1485468,280992,594395,1504662],[135415,131512,113586,134416,120336,98556,117975,100621,135649,96999,110044,134488],[15877,12651,8570,7132,44153,45894,13614,9391,10700,8683,7161,44538],[12163,17219,12036,11796,12948,12527,16538,14728,21873,13459,16109,20157],[77063,70390,48818,50104,34039,68329,98984,66532,49038,57791,62302,64638],[77050,53328,23443,55495,50034,36867,39967,64250,56782,25261,43738,40588],[34748,42761,31084,26675,32037,48586,34269,34340,37237,29250,67327,44793],[8359,10004,7249,4926,6781,6480,8296,7893,6320,6212,6672,11642],[7380,2590,683,1572,5099,1676,3963,1681,7103,1005,1321,2292],[5726700,6109600,4924400,6128800,4878200,6250600,5455300,6166000,5141700,5025200,5121500,5155100],[4780700,5020500,4137100,4199200,4101800,5497000,4609400,5175200,4354500,4243400,4298100,4065400],[74612,49089,71371,21832,43159,66873,89238,24209,59035,55584,70864,89525],[53139,30590,71732,23829,61822,50463,64664,52902,25604,19921,65311,45266],[489309,454328,402218,382847,446179,459094,424547,457987,466344,324451,529962,358786],[3156,4153,2428,15961,17243,22831,2477,4862,3038,17142,34617,2743],[0,0,0,0,0,0,0,0,0,0,0,0],[809678,1291942,809343,722681,784687,1279156,921251,894561,780294,927112,1035273,912066],[123358,191678,131220,137793,98550,166037,164807,100539,133089,126740,121392,150911],[33498,73882,41150,64137,23026,31277,110238,5537,54722,49396,76617,50413],[6769192,6466344,7403998,6514766,6509744,6138562,7717915,6807217,7486002,5302426,5137172,7405741],[98504,80433,47775,70320,54758,58378,74596,65669,56842,63588,39889,60851],[1671860,1593916,1703023,1470299,1633973,1637019,1595699,1733946,1441178,1467219,1395949,1817817],[4344070,4684693,3740306,3439005,3691849,5333607,4555767,4196284,4809421,4082822,4075989,4373980],[2115,810,510,1239,1140,374,1091,462,2358,1091,2586,548],[77319,68379,177243,19881,32085,109400,134281,47636,179510,33157,117698,61522],[123517,138756,105746,82905,97565,153543,116551,106120,130846,122699,78544,111282],[122721,126344,128641,99591,114199,120489,124441,115529,90730,167460,155578,125791],[2464468,2311824,2271626,2195357,2225689,2327064,2472924,2673309,2329546,2504491,2406706,2481370],[9218,9380,15012,6404,9224,12002,10111,10855,5789,8410,7316,7608],[13101,34121,46086,13719,37106,20377,19183,21471,15363,44896,40943,42895],[47951,3719,4643,2489,12861,6565,2897,10026,3820,2950,7222,27116],[8474,4005,7434,2661,7263,9284,18929,6756,5070,2792,7758,9914],[1722,1380,1729,987,2256,1505,2059,1856,1597,2798,1148,1082],[2665,3363,1248,3576,1415,2261,1482,2763,3397,3033,4156,2474],[54066,9801,25910,21589,10674,27007,59945,70418,63757,4663,6334,7283],[24195,26644,29319,36011,20555,16838,19416,27876,30190,42902,21959,18310],[7481265,7548001,6374198,6929035,7163479,7792074,7516364,8912350,6757831,6773005,7810503,7133642],[5784848,6150507,5154779,4802094,4826818,6672175,7049568,6247336,6755655,5557119,6233818,5884698],[22845,32331,27931,21129,28876,18970,28239,24635,15855,34754,21845,30156],[243822,229646,243227,169550,160475,243500,268961,164505,236254,245180,220098,248160],[221708,258392,224874,200534,212582,374213,277688,225644,233505,277119,282600,231403],[276456,455447,449544,519274,325864,737588,472359,670528,493861,392738,461908,509268],[15405,16029,18692,17047,27163,18883,17375,20211,18189,12037,13355,15734],[1404974,1512800,1243341,1204414,1133245,1477881,1249897,1247649,1290748,1190952,1189965,1181847],[38537,39826,32546,25375,47347,53846,45761,40725,99705,15556,38811,29359],[772144,471479,397788,275263,285224,626090,411583,317564,640105,573747,499540,528450],[3899900,3608400,3034800,2572300,2681500,3916100,3669600,3054000,3671100,3243100,3114500,3453300],[80599,68168,18234,59577,117675,78456,19072,73446,15375,16674,45914,19112],[742237,823524,691400,578405,531186,728717,707093,508917,681505,650476,658085,708359],[124061,132621,183923,104044,109592,313964,154897,136729,96075,111265,66674,226902],[90152,75179,84412,96879,80775,117535,86614,90348,178814,80267,102466,114715],[494,283,563,382,1677,222,1521,419,523,626,987,1297],[9506,9050,11791,11823,8443,9116,11348,7640,9728,8651,7898,10393],[1225542,1654932,1116549,898526,1082779,1430283,1455141,1206732,1194254,1118234,1229078,1367212],[65823,48436,53076,39804,60979,57658,57747,50459,51670,63246,47942,53511],[138630,100757,123349,69206,56042,141847,86877,70003,82412,74028,81811,149219],[44964,32665,4234,42760,61126,88272,88641,72734,68112,56271,49109,74606],[83902,101056,64520,92609,56135,96592,91131,106031,95147,172041,99750,95392],[2343752,2412712,2865718,1725244,2139479,2397646,2915966,2390691,2146717,2165065,2330102,2896148],[92988,119219,102899,68465,92452,131655,99753,101324,87918,106397,242241,310368],[5283,8491,1217,3637,7025,7196,4725,3207,4547,2481,11506,11752],[4834,2361,4546,3112,36764,6190,5771,3457,1988,6222,5236,2679],[9826,13854,6018,4775,6286,21651,5764,5274,18051,7120,7749,9035],[53408,41036,46151,25349,67787,52271,91769,90387,27936,23462,32247,35478],[94393,121017,134049,136719,156549,73049,54396,145333,94567,133349,93118,191920],[20895,18788,14099,14674,13597,19968,22822,24562,11129,18936,21361,21764],[466125,440859,311701,225132,297857,246381,309727,448109,279856,328426,362032,579719],[54,0,260,839,54,147,84,88,0,62,116,85],[3158164,2621213,2768573,2484476,2849971,3301359,3102858,3112130,2832744,2667565,3034201,2875136],[2071321,2254888,1790423,1645446,2225138,2197398,1931552,1997489,2033102,1762557,1965567,2241114],[60237343,63363749,55000084,51991457,54845697,64124991,64177050,63132579,59847424,54162780,56576348,62507132],[530153,975155,625765,505840,810537,586314,456655,675048,735218,901306,573275,813202],[378595,498657,360897,451265,330083,405922,397429,426125,391484,322583,357153,379348],[5451780,6094432,4671228,4036717,5127133,4854897,5413551,6504517,4487599,4787358,5070780,5278523],[1239,2100,3822,1558,1943,2455,1693,931,2026,947,1885,969],[438,136,39,109,285,261,28,369,180,482,676,64],[1922464,2259090,1958783,1770380,1798392,2086867,2151719,2236449,1872698,1568729,1730554,2375792],[351,1463,566,1326,889,567,1060,1368,294,1322,700,1464],[0,0,0,0,0,0,0,0,0,0,0,0]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Month<\\/th>\\n      <th>Afghanistan <\\/th>\\n      <th>Africa <\\/th>\\n      <th>America <\\/th>\\n      <th>Argentina <\\/th>\\n      <th>Asia <\\/th>\\n      <th>Australia <\\/th>\\n      <th>Austria <\\/th>\\n      <th>Bahrain <\\/th>\\n      <th>Bangladesh <\\/th>\\n      <th>Belgium <\\/th>\\n      <th>Brazil <\\/th>\\n      <th>Brunei Darussalam <\\/th>\\n      <th>Cambodia <\\/th>\\n      <th>Canada <\\/th>\\n      <th>Chile <\\/th>\\n      <th>Colombia <\\/th>\\n      <th>Cyprus <\\/th>\\n      <th>Czech Republic <\\/th>\\n      <th>Denmark <\\/th>\\n      <th>Ecuador <\\/th>\\n      <th>Estonia <\\/th>\\n      <th>Europe <\\/th>\\n      <th>European Union <\\/th>\\n      <th>Fiji <\\/th>\\n      <th>Finland <\\/th>\\n      <th>France <\\/th>\\n      <th>French Polynesia <\\/th>\\n      <th>Germany, Democratic Republic Of <\\/th>\\n      <th>Germany, Federal Republic Of <\\/th>\\n      <th>Greece <\\/th>\\n      <th>Guam <\\/th>\\n      <th>Hong Kong <\\/th>\\n      <th>Hungary <\\/th>\\n      <th>India <\\/th>\\n      <th>Indonesia <\\/th>\\n      <th>Iran (Islamic Republic Of) <\\/th>\\n      <th>Ireland <\\/th>\\n      <th>Israel <\\/th>\\n      <th>Italy <\\/th>\\n      <th>Japan <\\/th>\\n      <th>Jordan <\\/th>\\n      <th>Kuwait <\\/th>\\n      <th>Laos People's Democratic Republic <\\/th>\\n      <th>Latvia <\\/th>\\n      <th>Lebanon <\\/th>\\n      <th>Lithuania <\\/th>\\n      <th>Luxembourg <\\/th>\\n      <th>Macau <\\/th>\\n      <th>Mainland China <\\/th>\\n      <th>Malaysia <\\/th>\\n      <th>Maldives, Republic Of <\\/th>\\n      <th>Malta <\\/th>\\n      <th>Mexico <\\/th>\\n      <th>Myanmar <\\/th>\\n      <th>Nepal <\\/th>\\n      <th>Netherlands <\\/th>\\n      <th>New Caledonia <\\/th>\\n      <th>New Zealand <\\/th>\\n      <th>Oceania <\\/th>\\n      <th>Oman <\\/th>\\n      <th>Other Countries In Oceania <\\/th>\\n      <th>Pakistan <\\/th>\\n      <th>Papua New Guinea <\\/th>\\n      <th>Paraguay <\\/th>\\n      <th>Peru <\\/th>\\n      <th>Philippines <\\/th>\\n      <th>Poland <\\/th>\\n      <th>Portugal <\\/th>\\n      <th>Puerto Rico <\\/th>\\n      <th>Qatar <\\/th>\\n      <th>Republic Of Korea <\\/th>\\n      <th>Saudi Arabia <\\/th>\\n      <th>Slovak Republic (Slovakia) <\\/th>\\n      <th>Slovenia <\\/th>\\n      <th>Solomon Islands <\\/th>\\n      <th>Spain <\\/th>\\n      <th>Sri Lanka <\\/th>\\n      <th>Sweden <\\/th>\\n      <th>Switzerland <\\/th>\\n      <th>Syrian Arab Republic <\\/th>\\n      <th>Taiwan <\\/th>\\n      <th>Thailand <\\/th>\\n      <th>Total Merchandise Exports <\\/th>\\n      <th>United Arab Emirates <\\/th>\\n      <th>United Kingdom <\\/th>\\n      <th>United States <\\/th>\\n      <th>Uruguay <\\/th>\\n      <th>Venezuela <\\/th>\\n      <th>Vietnam, Socialist Republic Of <\\/th>\\n      <th>Yemen <\\/th>\\n      <th>Yemen Democratic <\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[{\"extend\":\"colvis\",\"text\":\"Exclude/Include Columns\"}],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92]},{\"orderable\":false,\"targets\":0}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n:::\n\n## \n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.1/htmlwidgets.js\"></script>\r\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/datatables-binding-0.27/datatables.js\"></script>\r\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../site_libs/dt-core-1.12.1/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../site_libs/dt-core-1.12.1/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/dt-core-1.12.1/js/jquery.dataTables.min.js\"></script>\r\n<link href=\"../site_libs/dt-ext-buttons-1.12.1/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/dt-ext-buttons-1.12.1/js/dataTables.buttons.min.js\"></script>\r\n<script src=\"../site_libs/dt-ext-buttons-1.12.1/js/buttons.html5.min.js\"></script>\r\n<script src=\"../site_libs/dt-ext-buttons-1.12.1/js/buttons.colVis.min.js\"></script>\r\n<script src=\"../site_libs/dt-ext-buttons-1.12.1/js/buttons.print.min.js\"></script>\r\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}