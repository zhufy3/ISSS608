[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Welcome to leave your comments below if you have any questions or suggestions!"
  },
  {
    "objectID": "Hands_on_Ex1/Hands_on_Ex1.html",
    "href": "Hands_on_Ex1/Hands_on_Ex1.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "pacman::p_load(readr, ggplot2, tidyverse)\n\n\n\n\nLet us use read_csv() of readr package to import our data used in this hands-on Exercise as shown in the code chunk below.\n\nexam_data<-read_csv(\"data/Exam_data.csv\")\n\nAs the information shows above, there are 4 categorical attributes which are ID, CLASS, GENDER, RACE, and the rest are continuous attributes which are ENGLISH, MATHS, SCIENCE. The data has a total of 322 rows.\nLet’s take a quick look at statistics summary of the data imported using summary() function.\n\nsummary(exam_data)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00  \n\n\n\n\n\n\n\nNow let’s use functions in ggplot2 package to describe attributes of the data by plotting different graphs. First let’s take a look at the MATHS grade by plotting a histgram for each class.\n\nggplot(data = exam_data, \n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"black\",\n                 fill = \"light blue\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL) +\n  ggtitle(\"Distribution of Maths Scores\")\n\n\n\n\nNow we can also display gender attributes by assigning blue to Male and red to Female in the histogram.\n\nggplot(data = exam_data, \n       aes(x = MATHS,\n           fill = GENDER)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"black\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL) +\n  ggtitle(\"Distribution of Maths Scores\")\n\n\n\n\n\n\n\nNow let us see the distribution of MATHS scores in a kernel density estimate plot using code chunk below.\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_density() + \n  ggtitle(\"Density of Maths Scores\")\n\n\n\n\nFrom the plot above, it shows that the density of Maths scores fits a left skewed bell-shaped distribution. And the mean of the distribution lays around 80.\nThen we can plot two kernel density lines for different genders by using chunk below.\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           color = GENDER)) +\n  geom_density()\n\n\n\n\nWe can see that two kernel density lines for different genders are very similar.\n\n\n\n\n\nWe can also plot boxplots of Maths scores for genders to visualise statistics attributes like Median, two hinges, two whiskers, outliers and mean by using codes below.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n       x = GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun.y = \"mean\",\n               color = \"red\",\n               size = 4)\n\n\n\n\nNoted that the Maths scores of Male are bit higher than that of Female. But the range of Maths scores of Male is larger than that of Female.\n\n\n\nThen let us plot Notched plot by using codes below to make boxplot more visulised.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot(notch = TRUE)\n\n\n\n\n\n\n\nWe can also integrate point plot and boxplot together.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 0.5)\n\n\n\n\n\n\n\n\n\n\n\nViolin plots are a way of comparing multiple data distributions. The code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_violin()\n\n\n\n\nNoted that Male has lower Maths scores than Female and higher scores than Female. And both gender’s Maths scores congregate around 80.\n\n\n\nThe code chunk below combined a violin plot and a boxplot to show the distribution of Maths scores by gender.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin(fill=\"light blue\") +\n  geom_boxplot(alpha=0.5)           \n\n\n\n\n\n\n\n\nNow let’s plot point graph to show correlation between MATHS scores and ENGLISH scores by using code chunk below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_classic()\n\n\n\n\nThe interpretability of this graph can be improved by adding a best fit curve.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_dark()\n\n\n\n\nNoted an obvious poisitive linear correlation between Maths score and English score.\nThe default smoothing method can be overridden as shown below.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_minimal()\n\n\n\n\n\n\n\nFaceting generates small multiples, each displaying a different subset of the data. And facets are an alternative to aesthetics for displaying additional discrete variables.\n\n\nThe code chunk below plots a trellis plot for distribution of Maths score using facet-wrap().\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bin = 20) +\n  facet_wrap(~ CLASS)\n\n\n\n\nNow we can see distributions of Maths scores by class 3A, 3B, 3C, 3D, 3E, 3F, 3G, 3H, 3I.\n\n\n\nWe can slice the Maths scores in each class by gender for boxplots as shown below.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_wrap(~ GENDER)\n\n\n\n\nAlso we can show the plot in vertical direction.\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = CLASS)) +\n  geom_boxplot() +\n  facet_grid(GENDER~.)\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = GENDER)) +\n  geom_boxplot() +\n  facet_grid(GENDER~CLASS)\n\n\n\n\n\n\n\n\nNow let us plot bar charts using functions in ggplot2 package.\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme(panel.background = element_rect(fill = \"light blue\", colour = \"white\"))\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = fct_infreq(RACE))) +\n  geom_bar() +\n  xlab(\"Race\") +\n  ylab(\"No. of Pupils\") +\n  geom_text(stat = \"count\", aes(label = ..count..),vjust = -1) +\n  coord_cartesian(ylim = c(0,210))"
  },
  {
    "objectID": "Hands_on_Ex3/Hands-on_Ex3.html",
    "href": "Hands_on_Ex3/Hands-on_Ex3.html",
    "title": "Hands-on Ex2",
    "section": "",
    "text": "pacman::p_load(ggiraph,plotly,gganimate,DT,tidyverse,patchwork)"
  },
  {
    "objectID": "Hands_on_Ex3/Hands-on_Ex3.html#data-used",
    "href": "Hands_on_Ex3/Hands-on_Ex3.html#data-used",
    "title": "Hands-on Ex2",
    "section": "Data used",
    "text": "Data used\nExam_data.csv will be used in this hands-on exercise 2.\n\nexam_data<-read_csv('data/Exam_data.csv')\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands_on_Ex4/Hands_on_Ex4.html",
    "href": "Hands_on_Ex4/Hands_on_Ex4.html",
    "title": "Hands-on Exercise 4",
    "section": "",
    "text": "In this exercise, we are going to explore packages that give us statistical summary for the data we care about."
  },
  {
    "objectID": "Hands_on_Ex4/Hands_on_Ex4.html#importing-packages",
    "href": "Hands_on_Ex4/Hands_on_Ex4.html#importing-packages",
    "title": "Hands-on Exercise 4",
    "section": "2 Importing packages",
    "text": "2 Importing packages\nWe will use:\n\nggstatsplot\ntidyverse\n\npackages in this exercise.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands_on_Ex4/Hands_on_Ex4.html#data-used",
    "href": "Hands_on_Ex4/Hands_on_Ex4.html#data-used",
    "title": "Hands-on Exercise 4",
    "section": "3 Data used",
    "text": "3 Data used\nExam_data.csv"
  },
  {
    "objectID": "Hands_on_Ex4/Hands_on_Ex4.html#importing-data-used",
    "href": "Hands_on_Ex4/Hands_on_Ex4.html#importing-data-used",
    "title": "Hands-on Exercise 4",
    "section": "4 Importing data used",
    "text": "4 Importing data used\n\nexam<-read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html",
    "title": "Hands-on Exercise 5",
    "section": "",
    "text": "The hands-on exercise consists of four steps:\n\nInstall and launch tidyverse and ggtern packages.\nDerive three new measures using mutate() function of dplyr package.\nBuild a static ternary plot using ggtern() function of ggtern package.\nBuild an interactive ternary plot using plot-ly() function of Plotly R package.\n\n\npacman::p_load(tidyverse, ggtern, dplyr, plotly)\n\n\n\n\nData of Singapore Residents by Planning AreaSubzone, Age Group, Sex and Type of Dwelling, June 2000-2018 will be used in this exercise.\n\npop_data<-read_csv(\"data/respopagsex2000to2018_tidy.csv\")\n\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>%\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\nwrite_csv(agpop_mutated,\"data/agpop.csv\")\n\n\n\n\n\nagpop_mutated<-read_csv(\"data/agpop.csv\")\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\n\nlabel <- function(txt){\n  list(\n    text = txt,\n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\",\n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt){\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"),\n  baxis = axis(\"Active\"),\n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated,\n  a = ~YOUNG,\n  b = ~ACTIVE,\n  c = ~OLD,\n  color = I(\"black\"),\n  type = \"scatterternary\"\n)%>%\n  layout(\n    annotations = label(\"Ternary Markers\"),\n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#packages-used-2",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#packages-used-2",
    "title": "Hands-on Exercise 5",
    "section": "Packages used",
    "text": "Packages used\n\npacman::p_load(seriation, dendextend, heatmaply)"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#data-used-2",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#data-used-2",
    "title": "Hands-on Exercise 5",
    "section": "Data used",
    "text": "Data used\n\nwh <- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#prepare-data",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#prepare-data",
    "title": "Hands-on Exercise 5",
    "section": "Prepare data",
    "text": "Prepare data\nReplace the row name with country’s names.\n\nrow.names(wh) <- wh$Country\n\nTransform the data into matrix.\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-heat-maps",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-heat-maps",
    "title": "Hands-on Exercise 5",
    "section": "Plotting heat maps",
    "text": "Plotting heat maps\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix)\n\n\n\n\n\nwh_heatmap <- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\nheatmaply(mtcars)\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#packages-used-3",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#packages-used-3",
    "title": "Hands-on Exercise 5",
    "section": "Packages used",
    "text": "Packages used\n\npacman::p_load(GGally, parallelPlot, tidyverse)"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#data-used-3",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#data-used-3",
    "title": "Hands-on Exercise 5",
    "section": "Data used",
    "text": "Data used\nWHData-2018.csv will be used in this exercise.\n\nwh <- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-a-simple-parallel-coordinates",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-a-simple-parallel-coordinates",
    "title": "Hands-on Exercise 5",
    "section": "Plotting a simple parallel coordinates",
    "text": "Plotting a simple parallel coordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-with-facet",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#plotting-with-facet",
    "title": "Hands-on Exercise 5",
    "section": "Plotting with facet",
    "text": "Plotting with facet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#rotating-x-axis",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#rotating-x-axis",
    "title": "Hands-on Exercise 5",
    "section": "Rotating x-axis",
    "text": "Rotating x-axis\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#adjusting-x-label-text",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#adjusting-x-label-text",
    "title": "Hands-on Exercise 5",
    "section": "Adjusting x-label text",
    "text": "Adjusting x-label text\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#interactive-plot",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#interactive-plot",
    "title": "Hands-on Exercise 5",
    "section": "Interactive plot",
    "text": "Interactive plot\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\n\nparallelPlot(wh,\n             rotateTitle = TRUE)  ##rotate axis label\n\n\n\n\n\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)  ##change the color scheme"
  },
  {
    "objectID": "Hands_on_Ex5/Hands_on_Ex5.html#parallel-coordinates-plot-with-histogram",
    "href": "Hands_on_Ex5/Hands_on_Ex5.html#parallel-coordinates-plot-with-histogram",
    "title": "Hands-on Exercise 5",
    "section": "Parallel coordinates plot with histogram",
    "text": "Parallel coordinates plot with histogram\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Inclass_Ex1/Inclass_Ex1.html",
    "href": "Inclass_Ex1/Inclass_Ex1.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "In-class Exercise 1"
  },
  {
    "objectID": "Inclass_Ex2/Inclass_Ex2.html",
    "href": "Inclass_Ex2/Inclass_Ex2.html",
    "title": "In-class Exercise 2",
    "section": "",
    "text": "In this in-class exercise 2, we will use more visualisation packages that support many useful functions for our visualisation analysis. We will try them one by one.\n\ntidyverse\nggplot2\nggrepel\nggthemes\nhrbrthemes\npatchwork\n\n\npacman::p_load(tidyverse, ggplot2, ggrepel, ggthemes, hrbrthemes, patchwork)"
  },
  {
    "objectID": "Inclass_Ex2/Inclass_Ex2.html#data-used",
    "href": "Inclass_Ex2/Inclass_Ex2.html#data-used",
    "title": "In-class Exercise 2",
    "section": "2 Data used",
    "text": "2 Data used\nThe data used in this exercise is the exam data we have used many times. Let’s import the data table by using read_csv from tidyverse package.\n\nexam_data<-read_csv('data/Exam_data.csv')\n\n\n2.1 Plotting with ggplot\nFirstly, we can create a combined chart using functions in ggplot2 package, we will add the smooth line and labels to the scattered point plot.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n2.2 Plotting with ggrepel\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\n\n\n\n\n2.3 Adding ggplot2 themes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +  \n  ggtitle(\"Distribution of Maths scores\") \n\n\n\n\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()\n\n\n\n\n\n\n2.4 Using hrbrthemes package\n\n2.4.1 Background with vertical and horizontal grid\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\n\n\n2.4.2 Background with only vertical grid\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18, \n              base_size = 15, \n              grid = \"Y\") \n\n\n\n\n\n\n\n3 Deploy multiple plots with patchwork package\n\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n\np1 + p2 / p3\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\npatchwork <- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)"
  },
  {
    "objectID": "Inclass_Ex3/Inclass_Ex3.html",
    "href": "Inclass_Ex3/Inclass_Ex3.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "pacman::p_load(ggiraph,plotly,gganimate,DT,tidyverse,patchwork)"
  },
  {
    "objectID": "Inclass_Ex3/Inclass_Ex3.html#data-used",
    "href": "Inclass_Ex3/Inclass_Ex3.html#data-used",
    "title": "In-class Exercise 3",
    "section": "Data used",
    "text": "Data used\nExam_data.csv will be used in this in-class exercise 3.\n\nexam_data<-read_csv('data/Exam_data.csv')\n\nWe then use function girafe of ggiraph package to plot an interactive chart.\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html",
    "href": "Inclass_Ex4/Inclass_Ex4.html",
    "title": "In-class Exercise 4",
    "section": "",
    "text": "In this In-class exercise, we will explore more interesting packages to visualize data with statistical summary information shown in the plots."
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#packages-used",
    "href": "Inclass_Ex4/Inclass_Ex4.html#packages-used",
    "title": "In-class Exercise 4",
    "section": "2 Packages used",
    "text": "2 Packages used\nPackages will be used in this exercise are:\n\nplotly\ntidyverse\nDT\npatchwork\nggstatsplot\nreadr\n\n\npacman::p_load(ggplot2, plotly, readr, tidyverse, DT, patchwork, ggstatsplot, readxl, see, parameters, performance, dplyr)"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#data-used",
    "href": "Inclass_Ex4/Inclass_Ex4.html#data-used",
    "title": "In-class Exercise 4",
    "section": "3 Data used",
    "text": "3 Data used\nData we will use in this exercise is Exam_data.csv, and we can import the data with codes chunk below.\n\nexam_data<-read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#working-with-visual-variable-plot_ly-method",
    "href": "Inclass_Ex4/Inclass_Ex4.html#working-with-visual-variable-plot_ly-method",
    "title": "In-class Exercise 4",
    "section": "4 Working with visual variable: plot_ly() method",
    "text": "4 Working with visual variable: plot_ly() method\nToday we are going to explore the function plot_ly() to create an interactive plot.\n\nplot_ly(data = exam_data,\n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#working-with-ggplotly-function",
    "href": "Inclass_Ex4/Inclass_Ex4.html#working-with-ggplotly-function",
    "title": "In-class Exercise 4",
    "section": "5 Working with ggplotly function",
    "text": "5 Working with ggplotly function\n\np<-ggplot(data = exam_data,\n          aes(x = MATHS,\n              y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\nggplotly(p)"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#working-with-ggstatsplot-package",
    "href": "Inclass_Ex4/Inclass_Ex4.html#working-with-ggstatsplot-package",
    "title": "In-class Exercise 4",
    "section": "6 Working with ggstatsplot package",
    "text": "6 Working with ggstatsplot package\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER,\n  y = MATHS,\n  type = \"np\",\n  massages = FALSE\n)\n\n\n\n\n\nggscatterstats(\n  data = exam_data,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE\n)"
  },
  {
    "objectID": "Inclass_Ex4/Inclass_Ex4.html#regression-modeling",
    "href": "Inclass_Ex4/Inclass_Ex4.html#regression-modeling",
    "title": "In-class Exercise 4",
    "section": "7 Regression modeling",
    "text": "7 Regression modeling\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmy_sum<-exam_data%>%\n  group_by(RACE)%>%\n  summarise(\n    n = n(),\n    mean = mean(MATHS),\n    sd = sd(MATHS)\n  )%>%\n  mutate(se = sd/sqrt(n-1))\n\n\nmodel<-lm(Price ~ Age_08_04 + Mfg_Year + KM +\n            Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x = RACE,\n        ymin = mean - se,\n        ymax = mean + se),\n    width = 0.2,\n    colour = \"black\",\n    alpha = 0.9,\n    size = 0.5\n  ) +\n  geom_point(aes(\n    x = RACE,\n    y = mean),\n    stat = \"identity\",\n    color = \"red\",\n    size = 1.5,\n    alpha = 1)\n\n\n\nmodel[[\"coefficients\"]]\n\n     (Intercept)        Age_08_04         Mfg_Year               KM \n   -2.636783e+06    -1.409333e+01     1.314938e+03    -2.323290e-02 \n          Weight Guarantee_Period \n    1.902743e+01     2.769708e+01"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-Visual Analytics and Applications",
    "section": "",
    "text": "Let us get started with the author!!\n\nVisualisation History"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "In this take-home exercise 1, we will use the Age-sex pyramid through Tableau Desktop to visualise demographic structure of population of Singapore. And we will display nine selected planning areas on a single view by using trellis display."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#the-visualising-tool",
    "href": "Take-home_Ex1/Take-home_Ex1.html#the-visualising-tool",
    "title": "Take-home Exercise 1",
    "section": "2 The Visualising Tool",
    "text": "2 The Visualising Tool\nTableau Desktop"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#step-by-step-guide",
    "href": "Take-home_Ex1/Take-home_Ex1.html#step-by-step-guide",
    "title": "Take-home Exercise 1",
    "section": "3 Step-by-step Guide",
    "text": "3 Step-by-step Guide\n\nProcedures to designing visualisation\n\n\nProcedure\nStep 1\nCheck the csv and xls file named ‘Singapore Residents by Planning Area / Subzone, Age Group, Sex and Type of Dwelling, June 2022’ from Singstat.\nScreenshot\n\n\n\n\n\n\n\nStep 2\nFor files with the same content but differed forms, we should choose csv file for its smaller size and friendly readability to Tableau.\n\n\n\nStep 3\nBecause we use the data from the same year, so we don’t need the column named Time, for which all the rows are 2022. Therefore we can delete this column to get a cleaner data table. Then we save the file and name it ppl2022.csv.\n\n\n\nStep 4\nImp0ort the data into Tableau Desktop by opening the csv file just downloaded.\n\n\n\nStep 5\nIn the Data Source page, see that the data contains 6 fields: PA, SZ, AG, Sex, TOD, POP and Time and 100928 rows. Through checking the data type of the fields from the detail session, noted that data type of the columns named PA, SZ, AG, Sex and TOD are string, and column named Pop are Number (whole).\n\n\n\nStep 6\nChecking the Notes file for the data, we see the explanations of each column:\n\nPA - Planning Area\nSZ - Subzone\nAG - Age Group\nTOD - Type of Dwelling\nPop - Resident Count\n\n\n\n\nStep 7\nBefore we start analysing, we can check the raw data information by clicking the black triangle on the top right of the column and clicking Describe… For example, as shown in right, the column PA which means planning area has 55 items and no Null values. We can use the same method to check other columns we need, AG - age and Pop - population, and find no Null values in these columns.\n\n\n\nStep 8\nTo build a Age-sex pyramid chart, we need bins of the age. Information of the age column shows that the original data already has 19 bins of age, and the length of each bin is 4, which is quite standard for an Age-sex pyramid chart.\nAG | | Role: Discrete Dimension | | Type: Database column | | Remote column: [ppl2022.csv].[AG] | | Remote type: ANSI/MBCS character string | Contains NULL: No | | Locale: United States(English) | | Sort flags: Case-sensitive | | Column width: 11 | | Status: Valid | | Domain (19 members) | | 0_to_4 | | 10_to_14 | | 15_to_19 | | 20_to_24 | | 25_to_29 | | 30_to_34 | | 35_to_39 | | 40_to_44 | | 45_to_49 | | 5_to_9 | | 50_to_54 | | 55_to_59 | | 60_to_64 | | 65_to_69 | | 70_to_74 | | 75_to_79 | | 80_to_84 | | 85_to_89 | | 90_and_over |\n\n\nStep 9\nThen in the new worksheet, we drag the AG to the Row shelf.\n\n\n\nStep 10\nSelect Analysis > Create a Calculated Field, and enter Male Population. Then in the pane space, enter formula as shown in right to extract Male population from the Sex.\n\n\n\nStep 11\nAs shown on the right, we have Male population now.\n\n\n\nStep 12\nWe use the same way to extract female population as shown on the right.\n\n\n\nStep 13\nDrag the Male Population and Female Population to the Column shelf.\n\n\n\nStep 14\nClick the triangle of the PA in the Table shelf, open the filter option and select 1 planning area according to our task requirements.\n\n\n\nStep 15\nDrag the Sex to the color to embody different colors to the bar charts for each gender.\n\n\n\nStep 16\nAccording to the code of Age-sex pyramid, Female chart ought to be on the right side. Therefore, we can change the position of Female and Male axis by changing the location of Male Population and Female Population in the column shelf.\n\n\n\nStep 17\nNoted that the Female population has at least 19 null values, we can check the data by navigating to Analysis > View Data… Noted that because of the conditional statement we used to extract male population and female population, there will be Null values if the object does not fit the condition. We click on the button and choose the ‘Show data at default position’. So that all null values will be replaced by 0.\n\n\n\nStep 18\nThe next step to create the age-sex pyramid graph is to Right click the axis of Male population > Edit Axis > Reversed.\n\n\n\nStep 19\nThen we change the aesthetics of the chart. First we change the color of the bar chart by clicking color > Edit color under the Mark.\n\n\n\nStep 20\nLastly, we should sort the Y-axis as descending order. Right click beside the y axis > descending.\n\n\n\nStep 21\nDouble click the Title and change it to Ang Mo Kio Age-sex Pyramid.\n\n\n\nStep 22\nWe can remove the y label to make a tidier chart by right-clicking the y label > Hide Field Labels for Rows…\n\n\n\nStep 23\nWith the same steps, we create other 8 age-sex pyramid graphs for other planning areas and rename each worksheet.\n\n\n\nStep 24\nThen we drag all the age-sex pyramid into a new created Dashboard named A-S Pyramid, and adjust the size of the dashboard to 1800 px*1200 px.\n\n\n\nStep 25\nChange the scale name of the y axis\n\n\n\nStep 26\nWe also need to edit the Aliases of AG-age because the original aliases are very tedious. For example, we can change 0_to_4 to 0-4 and so on.\n\n\n\nStep 27\nRight-click the x label PA > Hide Field Labels for Rows… to remove the label for a tidier chart.\n\n\n\nStep 28\nThen we can drag the PA to the column shelf and the name of the planning area will appear on the top of the chart, so that we don’t need the title of the chart appear on the dashboard.\n\n\n\nStep 29\nNow we can hide the title in the dashboard with area name on the top of each plot by clicking the triangle of on the right of each sub plot > uncheck the Title.\n\n\n\nStep 30\nPut all the 9 charts together under the same x-axis range by right clicking the PA > Show filter and click the 9 areas we chose before."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#the-dashboard",
    "href": "Take-home_Ex1/Take-home_Ex1.html#the-dashboard",
    "title": "Take-home Exercise 1",
    "section": "4 The Dashboard",
    "text": "4 The Dashboard"
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#discussion",
    "href": "Take-home_Ex1/Take-home_Ex1.html#discussion",
    "title": "Take-home Exercise 1",
    "section": "5 Discussion",
    "text": "5 Discussion\nWe personally chose 9 planning areas in Singapore and created their Age-sex pyamid and excluded those where population is 0, for example, Changi Bay.\n\nTaking a look at the real map, Changi Bay area is not a name of a continent, but a real bay, where there is no residency as shown in the screenshot below. Therefore we can basically confirm that there are no missing values.\n\nThe age-sex pyramid breaks down a location’s population into male and female genders and age ranges. The layout of our population pyramid shows male population on the left side and female population on the right side. There are mainly three basic types of population pyramids show how different trends are displayed. \n\nRapid Growth\n\nA population pyramid that is very wide at the younger ages, characteristic of countries with a high birth rate and perhaps low life expectancy. The population is said to be fast-growing, and the size of each birth cohort increases each year.\n\nSlow Growth\n\nA pyramid can be described as stationary if the percentages of population (age and sex) remain approximately constant over time. In a stationary population, the numbers of births and death roughly balance one another.\n\nNegative Growth\n\nA population pyramid that is narrowed at the bottom. The population is generally older on average, as the country has long life expectancy, a low death rate, but also a low birth rate. This may suggest that in future there may be a high dependency ratio due to reducing numbers at working ages. This is a typical pattern for a very developed country, with a high level of education, easy access to and incentive to use birth control, good health care, and few negative environmental factors.\n\n5.1 Type I\nType I structure has a cone shaped age-sex pyramid.\n\n5.1.1 Population structure of Ang Mo Kio\n\n\nIt is obvious that population structure in Ang Mo Kio area belongs to Negative Growth with a kiteshape, which also means low birth rate in this area.\nThe mode of the age group in this area is about 60-64. As shown in the age-sex pyramid chart, population with the most size is among 60-64 years, and this area has a huge number of elderly and middle-aged adults. With ages getting smaller or larger, population generally gets smaller.\nIn addition, the population of male and female is about equal. There are usually more females than males in the older age ranges since women have a greater life expectancy.\nThe chart has a relatively small base and skinny top, which means a low dependency rate in this area.\n\n\n\n5.1.2 Population structure of Queenstown\n\n\nSimilar to population structure in Ang Mo Kio, the one in Queenstown area also belongs to Negative Growth, but the total population is much less than that in Ang Mo Kio area.\nThe mode of the age group in this area is around 40-49 years old.\n\n\n\n5.1.3 Population structure of Jurong West\n\n\nAlso noted as Negative Growth, population in this area has a huge number of middle aged citizens.\nThe mode of the age group in this area is around 45-49 years old.\n\n\n\n5.1.4 Population structure of Toa Payoh\n\n\nWith small base and large size in the middle, population structure in this area is also Negative Growth.\nNumber of population between 30-34 year old is especially large in this area. It seems like many young adults like to live in this area.\nThe mode of the age group in this area is around 30-34 years old.\n\n\n\n\n5.2 Type II\nType II structure has a notch in the middle area.\n\n5.2.1 Population structure of Choa Chu Kang\n\n\nThe largest population belongs to 50-64 years old and 20-34 years old, seemingly that the fertility rate of the current generation is much lower than that of previous generations in this area, but this conclusion needs more evidence to prove it.\nHowever, the number of population under 20 years old and above 70 years old takes the smallest part of the total population. Therefore, this population structure also belongs to Negative Growth.\nThe mode of the age group in this area is around 25-29 years old, followed by 55-59 years old.\n\n\n\n5.2.2 Population structure of Yishun\n\n\nPopulation structure in this area is also Negative Growth structure with adults take the most part of the population and the small base.\nThe mode of the age group is around 30-34 years old.\n\n\n\n5.2.3 Population structure of Pasir Ris\n\n\nNegative Growth structure with adults take the most part of the population and the small base.\nEspecially high portions of population between 55-64 years old and 20-29 years old.\nLow dependency rate due to small number of children and elderly.\nThe mode of the age group is around 55-59 years old.\n\n\n\n5.2.4 Population structure of Novena\n\n\nNegative Growth structure with adults take the most part of the population and the small base.\nThe notch in this area locates in age group 20-24, and male kids are more than female kids.\nLow dependency rate due to small number of children and elderly.\nThe average age is around 34 years old.\n\n\n\n\n5.3 Type III\nThis type of population structure is based on a few population compared to other areas.\n\n5.3.1 Population structure of Changi\n\n\nNoted a quite asymmetrical shape between left and right parts due to the small total number of the population. The Changi area is around the Changi Airport so that the residency is quite few compared to other areas.\nGenerally this area has low fertility rate with a Negative Growth structure because its portions of kids and elderly are small compared to that of other age groups.\nThe mode of the age group in this area is around 10-14, 45-49 years old."
  },
  {
    "objectID": "Take-home_Ex1/Take-home_Ex1.html#conclusion",
    "href": "Take-home_Ex1/Take-home_Ex1.html#conclusion",
    "title": "Take-home Exercise 1",
    "section": "6 Conclusion",
    "text": "6 Conclusion\n\n\n\n\n\n\n\n\nPlanning Area\nPopulation Structure\nMode of Age Group\n\n\n\n\nAng Mo Kio\nNegative Growth - kite shape\n60-64\n\n\nQueenstown\nNegative Growth - kite shape\n40-49\n\n\nJurong West\nNegative Growth - kite shape\n40-45\n\n\nToa Payoh\nNegative Growth\n30-34\n\n\nChoa Chu Kang\nNegative Growth - kite shape with a notch\n25-29\n\n\nYishun\nNegative Growth - kite shape with a notch\n30-34\n\n\nPasir Ris\nNegative Growth - kite shape with a notch\n55-59\n\n\nNovena\nNegative Growth - kite shape with a notch\n25-29\n\n\nChangi\nNegative Growth\n10-14, 45-49\n\n\n\nAll the population structures in these 9 areas are Negative Growth which generally means a low fertility rate. And all are of low dependency rate because of their small base for young residents and skinny top for elder ones. And according to the mode of the age group, we see most population in Ang Mo Kio is the oldest, followed by Pasir Ris. Most of the population in Novena and Chou Chu Kang are young adults.\n\nAs shown in a same x-axis scale, we can clearly see the total population size of each area. In our chosen areas, Jurong West has the largest size of population among others, followed by Yishun. Changi area has the smallest size of population."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home Exercise 2",
    "section": "",
    "text": "Our tasks in this exercise is to:\n\nselect one of the Take-home Exercise 1 prepared by my classmate,\ncritic the submission in terms of clarity and aesthetics,\nprepare a sketch for the alternative design,\nremake the original design by using ggplot2, ggplot2 extensions and tidyverse packages."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#guide-of-critiques",
    "href": "Take-home_Ex2/Take-home_Ex2.html#guide-of-critiques",
    "title": "Take-home Exercise 2",
    "section": "2 Guide of Critiques",
    "text": "2 Guide of Critiques\nOur task of take-home exercise 1 is to plot age-sex pyramid for 9 planning areas. The guide of the task is to plot an audience-friendly and subject focused charts. Therefore, we can critique and improve our peer’s preparation from perspectives like clarity and aesthetics.\nTherefore, in this exercise, 3 codes below can serve as our references:\n\nDefinition\nAmplification\nSimplicity"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#original-design",
    "href": "Take-home_Ex2/Take-home_Ex2.html#original-design",
    "title": "Take-home Exercise 2",
    "section": "3 Original Design",
    "text": "3 Original Design"
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#critiques",
    "href": "Take-home_Ex2/Take-home_Ex2.html#critiques",
    "title": "Take-home Exercise 2",
    "section": "4 Critiques",
    "text": "4 Critiques\n\n4.1 Critiques on definition\nThe definition of the chart is very clear as the title shows - ‘Demographic structure of Singapore at top 9 population planning areas in June 2022’.\n\n\n\n\n\n\n\n\nStatus\nIssues\nScreenshot\n\n\n\n\n🌟\nThe author chose the areas in purpose instead of randomly. That means the author is showing the patterns of population structure with a clear objective.\n\n\n\n🌟\nThe title shows clearly the chart type, which is Demographic structure.\n\n\n\n🌟\nThe title shows the time of the data collection, which is June 2022.\n\n\n\n❎\nThe standard population structure chart contains x-axis of Male population and Female population, and y-axis of age group. Normally, Female population is on the right side and Male’s on the left side. The author puts the structure chart in a reverse direction, which is okay but against the rule of thumb.\n\n\n\n❎\nThe range of each age group is normally 5 years such as 0-4, 5-9 and so on. Otherwise, the shape of the population structure may miss some important information. The range of group in the chart above is 10 years. Maybe better to switch to 5 years as the same as the raw data.\n\n\n\n\n\n\n4.2 Critiques on Amplification\n\n\n\n\n\n\n\n\nStatus\nIssue\nScreenshot\n\n\n\n\n🌟\nIt’s good that the author brings the audience’s focus just on the shape of each chart under a same range of x-axis, which is -40k to 40k, by not showing the exact number of population of each age group.\n\n\n\n🌟\nIt is very clear to draw the bar chart for different genders in different colors, red for female and blue for male.\n\n\n\n❎\nHowever, the range of y-axis is too large so that the shape is contacted.\n\n\n\n❎\nThere is a Column on top of the chart, and Female population and Male population as x-label at the bottom of the chart. So it is a little confusing.\n\n\n\n\n❎\nFor each small chart, the author puts the name of the planning area beside the bar of the age group with the most population. There may be some information the author intends to deliver like the age group with the most population, but it appears not very obvious.\n\n\n\n❎\nThe x-label retains the column name, AG, of the raw data frame, which is the short of age but no explanation here.\n\n\n\n\n\n\n4.3 Critiques on Simplification\n\n\n\n\n\n\n\n\nStatus\nIssue\nScreenshot\n\n\n\n\n🌟\nIt is good to configure the chart as 3*3 rows and columns. A visually comfortable and tidy deployment.\n\n\n\n❎\nThe aliases of the y-axis are a little tedious, which contains number, string and special character. It is better to simplify the aliases.\n\n\n\n❎\nThere are column numbers for the whole chart, which is tedious."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#remake-of-the-chart",
    "href": "Take-home_Ex2/Take-home_Ex2.html#remake-of-the-chart",
    "title": "Take-home Exercise 2",
    "section": "5 Remake of the Chart",
    "text": "5 Remake of the Chart\nIn accordance to issues we come up above, we are going to remake the chart to improve step by step.\n\n5.1 Importing the packages\nIn the exercise, we will mainly use packages as below:\n\nggplot2\ntidyverse\nggrepel\nggthemes\nhrbrthemes\npatchwork\n\n\npacman::p_load(ggplot2,tidyverse,ggrepel,ggthemes,hrbrthemes,patchwork,ggiraph)\n\n\n\n5.2 Importing the data\nFirst let us import the data of population in Singapore extracted from the Singstat. We will use the read_csv\n\npop<-read_csv(\"data/population.csv\")\n\nNoted from the information above, we have 100928 rows and 7 columns in this data frame. See the 7 columns are PA, SA, AG, Sex, TOD, Pop and Time, among which PA, SZ, AG, Sex and TODare character datatype and Pop and Time are double-precision floating-point format (dbl) data type.\n\n\n5.3 Glimpse the data\nLet us take a look at the data we imported to use later using code chunk below.\n\nhead(pop,10)\n\nOkay we see values of each column, like Ang Mo Kio in column Planning area, 0_to_4 in column AG, etc.\n\n\n5.4 Explanation of each column\n\nPA: Planning area\nSZ: Subzone\nAG: Age\nSex: Sex\nTOD: Type of dwelling\nPop: Population\nTime: Time, each value = June 2022\n\n\n\n5.5 Cleaning the data\n\n5.5.1 Extracting columns used\nAs we see from the data frame, there are 7 columns. Most of them won’t be used in this exercise. We need to therefore extract only columns of Planning area, Age, Sex and Pop, and write this new data table as ppl. And rename the Sex and Pop as SX and PP for more convenience.\n\nppl<-pop%>%\n  select(PA,AG,Sex,Pop)%>%\n  rename(SX = `Sex`)%>%\n  rename(PP = `Pop`)\n\n\n\n5.5.2 Checking missing values\nBefore we use the data, we should first check if there are any missing values using codes below.\n\nsummary(ppl[rowSums(is.na(ppl))!=0,])\n\nFrom the information above, we see no missing values in this data table.\n\n\n5.5.3 Aggregate the data\n\nprop<-ppl%>%\n  group_by(`PA`, `SX`, `AG`)%>%\n  summarise(\"Subsum\" = sum(PP))\n\nwrite_csv(prop,\"data/prop.csv\")\n\n\n\nWe see that the size of the new data table is much smaller than the raw data.✨\n\n\n5.5.4 Create new columns\nThen we can create a new column which shows percentage of population belonging to each age group for male and female in each planning area, instead of only the exact number of the population.\nFirst, we need to use codes below to compute the sum of population of each gender in a spacific planning area.\n\nprop<-read_csv(\"data/prop.csv\")\nppsum<-prop%>%\n  group_by(`PA`, `SX`)%>%\n  summarise(\"SUM\" = sum(Subsum))\n\nThen let us just combine the new data table named ppsum with data table named prop by planning area and sex using code chunk below.\n\npct<-merge(prop, ppsum, by = c(\"PA\", \"SX\"))\n\nWe can noe create the new column named PCT using code chunk below and have a look at the new data table.\n\npct<-pct%>%\n  mutate(\"PCT\" = paste(as.character(signif(Subsum/SUM*100,2)),\"%\"))\n\nhead(pct,10)\n\n           PA      SX       AG Subsum   SUM   PCT\n1  Ang Mo Kio Females   0_to_4   2480 84410 2.9 %\n2  Ang Mo Kio Females 10_to_14   3320 84410 3.9 %\n3  Ang Mo Kio Females 15_to_19   3620 84410 4.3 %\n4  Ang Mo Kio Females 20_to_24   4030 84410 4.8 %\n5  Ang Mo Kio Females 25_to_29   5020 84410 5.9 %\n6  Ang Mo Kio Females 30_to_34   5650 84410 6.7 %\n7  Ang Mo Kio Females 35_to_39   5120 84410 6.1 %\n8  Ang Mo Kio Females 40_to_44   5970 84410 7.1 %\n9  Ang Mo Kio Females 45_to_49   6350 84410 7.5 %\n10 Ang Mo Kio Females   5_to_9   3120 84410 3.7 %\n\n\nWe see that we have new column named PCT in the most right of the data table, which shows the percentage of population from each age group of female or male in a planning area.\n\n\n\n5.6 Data preparation\n\n5.6.1 Extracting top 9 population planning areas\nIn accordance to the author’s intention, we need to find out the top 9 population planning areas. Code chunk below will help us achieve this objective.\n\ntail(\n  pct%>%\n  group_by(PA)%>%\n    summarise(\"SPP\"=sum(SUM))%>%\n  arrange(SPP,FALSE),\n  9)\n\n# A tibble: 9 × 2\n  PA                SPP\n  <chr>           <dbl>\n1 Punggol       3539130\n2 Choa Chu Kang 3616270\n3 Yishun        4236240\n4 Hougang       4323260\n5 Woodlands     4797690\n6 Sengkang      4809280\n7 Jurong West   4912260\n8 Tampines      5048110\n9 Bedok         5294160\n\n\nAs shown in chart above, Bedok, Tampines, Jurong West, Sengkang, Woodlands, Hougang, Yishun, Choa Chu Kang and Punggol are the top 9 population planning areas.\n\n\n5.6.2 Recoding of the column AG\nIn order to better sort the x-axis, we recode the values in column AG as the cutting years, 0, 5, 10, …, 90 using below codes.\n\npct<-pct%>%\n  mutate(AG = recode(AG, \"0_to_4\" = 0, \"5_to_9\" = 5, \"10_to_14\" = 10, \"15_to_19\" = 15, \"20_to_24\" = 20, \"25_to_29\" = 25, \"30_to_34\" = 30, \"35_to_39\" = 35, \"40_to_44\" = 40, \"45_to_49\" = 45, \"50_to_54\" = 50, \"55_to_59\" = 55, \"60_to_64\" = 60, \"65_to_69\" = 65, \"70_to_74\" = 70, \"75_to_79\" = 75, \"80_to_84\" = 80, \"85_to_89\" = 85,\"90_and_over\" = 90))\n\n\n\n5.6.3 Review and improvement of the issues\nIn our revised plot, we need to fix issues we found before step by step.\n\nAdjust the bar chart of Male population to the left side and that of Female to the right side.\nChange the range of each age group to 5 years.\nChange the range of y-axis from 0 - 4k to 0 - 2k.\nDelete tedious labels like column and Female population and Male population.\nPut the name of each planning area on the top of the chart.\nSwitch the x-label from AG to Age Group.\nRecode the age group aliases to the cutting of years.\n\n\n\n5.6.4 Adding new functions\nFrom the foundation of the author’s plot, we can add new more functions to the plot, such as interaction, background and legend.\n🎁 To make the plot more amplified, we don’t put the exact number of population to the bar chart. We can add an interactive labels showing instead of the number, but the percentage of the population for each age group among the total when putting the tick on a specific bar.\n🎁 Adding a grey background with x-y grid as reference lines.\n🎁 Offering a legend showing colors denoting Female and Male.\n🎁 Adding a note for the audience to explore the interactive function.\n🎁 Adding a subtitle to shorten the main title."
  },
  {
    "objectID": "Take-home_Ex2/Take-home_Ex2.html#plotting-age-sex-pyramid",
    "href": "Take-home_Ex2/Take-home_Ex2.html#plotting-age-sex-pyramid",
    "title": "Take-home Exercise 2",
    "section": "6 Plotting age-sex pyramid",
    "text": "6 Plotting age-sex pyramid\nNow we can plot the chart using code chunk below.\n\ntooltip_css <- \"background-color:white; #<<\nfont-style:bold; color:black;\"\n\np<-pct%>%\n  filter(`PA` %in%\n           c(\"Bedok\",\"Tampines\", \"Jurong West\", \"Sengkang\", \"Woodlands\", \"Hougang\", \"Yishun\", \"Choa Chu Kang\", \"Punggol\"))%>%\n  mutate(Subsum = ifelse(SX == \"Males\", Subsum*(-1), Subsum*1))%>%\n    ggplot(aes(x = factor(AG), y = Subsum, fill = SX)) +\n    geom_bar_interactive(\n      aes(tooltip = PCT),\n      stat = \"identity\") +\n  facet_wrap(~ PA) +\n  scale_y_continuous(labels = paste0(as.character(c(seq(3, 0, -1), seq(1, 3, 1))), \"k\")) +\n    coord_flip() +\n  theme(axis.text.x=element_text(angle=0)) +\n    labs(title = \"Demographic Structure Pyramid\",\n         subtitle = \"of top 9 population planning areas in SG (June 2022, data sorce: SingStat)\",\n         caption = \"Note: \\n Put your mouse on the bar to see the No. of population as percentage of the total population within a gender\",\n         x = \"Age \\n Group\",\n         y = \"No. of Population\")+\n    theme_grey()+\n  theme(panel.grid.major = element_blank()) +\n    guides(fill=guide_legend(title = \"\"),\n           shape=guide_legend(override.aes = list(size=0.5)))+\n    theme(plot.title = element_text(size=13, face = \"bold\"),\n          plot.subtitle = element_text(size = 10, face = \"italic\"),\n          legend.title = element_text(size=7),\n          legend.text = element_text(size=5),\n          axis.title.y=element_text(angle=0, size = 7),\n          axis.title.y.left = element_text(vjust = 0.5),\n          axis.title.x.bottom = element_text(size = 7),\n          axis.text.y = element_text(size = 5,vjust = 1),\n          axis.ticks.y = element_line(size = 0.5, color = \"grey\"),\n          plot.caption = element_text(hjust = 0, colour = \"blue\", face = \"italic\"))\n\n\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 8,                         \n  height_svg = 8*0.8,\n  options = list(                        \n    opts_tooltip(\n      css = tooltip_css)))"
  }
]