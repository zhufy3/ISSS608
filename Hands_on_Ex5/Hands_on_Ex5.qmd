---
title: "Hands-on Exercise 5"
author: "Fangyuan ZHU"
date: 10 Feb 2023
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  warning: false
format: html
editor: visual
---

# 1 Buiding Ternary Plot with R

## Packages used

The hands-on exercise consists of four steps:

-   Install and launch **tidyverse** and **ggtern** packages.

-   Derive three new measures using *mutate()* function of **dplyr** package.

-   Build a static ternary plot using *ggtern()* function of **ggtern** package.

-   Build an interactive ternary plot using *plot-ly()* function of **Plotly R** package.

```{r}
pacman::p_load(tidyverse, ggtern, dplyr, plotly)
```

## Data used

Data of *Singapore Residents by Planning AreaSubzone, Age Group, Sex and Type of Dwelling, June 2000-2018* will be used in this exercise.

```{r}
pop_data<-read_csv("data/respopagsex2000to2018_tidy.csv")
```

```{r}
agpop_mutated <- pop_data %>%
  mutate(`Year` = as.character(Year))%>%
  spread(AG, Population) %>%
  mutate(YOUNG = rowSums(.[4:8]))%>%
  mutate(ACTIVE = rowSums(.[9:16]))  %>%
  mutate(OLD = rowSums(.[17:21])) %>%
  mutate(TOTAL = rowSums(.[22:24])) %>%
  filter(Year == 2018)%>%
  filter(TOTAL > 0)
```

## Plotting a Static Ternary Diagram

```{r}
ggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point()
```

```{r}
ggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +
  geom_point() +
  labs(title="Population structure, 2015") +
  theme_rgbw()
```

```{r}
label <- function(txt){
  list(
    text = txt,
    x = 0.1, y = 1,
    ax = 0, ay = 0,
    xref = "paper", yref = "paper",
    align = "center",
    font = list(family = "serif", size = 15, color = "white"),
    bgcolor = "#b3b3b3", bordercolor = "black", borderwidth = 2
  )
}

axis <- function(txt){
  list(
    title = txt, tickformat = ".0%", tickfont = list(size = 10)
  )
}

ternaryAxes <- list(
  aaxis = axis("Young"),
  baxis = axis("Active"),
  caxis = axis("Old")
)

plot_ly(
  agpop_mutated,
  a = ~YOUNG,
  b = ~ACTIVE,
  c = ~OLD,
  color = I("black"),
  type = "scatterternary"
)%>%
  layout(
    annotations = label("Ternary Markers"),
    ternary = ternaryAxes
  )
```
